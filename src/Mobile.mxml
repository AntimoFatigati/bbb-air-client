<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:top="org.mconf.mobile.top.view.*"
			   xmlns:ui="org.mconf.mobile.view.navigation.ui.*"
			   applicationDPI="160"
			   preinitialize="preinitializeHandler(event)" xmlns:navigation="org.mconf.mobile.view.navigation.*" xmlns:app="org.mconf.mobile.view.navigation.pages.app.*"  
			   >
	<fx:Style source="Default.css"/>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.mconf.mobile.AppConfig;
			import org.mconf.mobile.util.MconfLoggerFactory;
			import org.mconf.mobile.view.navigation.PagesNavigatorConfig;
			import org.mconf.mobile.view.navigation.pages.app.AppPageConfig;
			import org.mconf.mobile.view.navigation.pages.app.MainNavigatorConfig;
			import org.mconf.mobile.view.navigation.pages.app.MenuConfig;
			import org.mconf.mobile.view.navigation.pages.app.TopConfig;
			import org.mconf.mobile.view.navigation.pages.app.views.presentation.PresentationConfig;
			import org.mconf.mobile.view.navigation.pages.app.views.videochat.VideoChatConfig;
			import org.mconf.mobile.view.navigation.pages.login.LoginPageConfig;
			import org.mconf.mobile.view.ui.MicButtonConfig;
			import org.mconf.mobile.view.ui.NavigationButtonConfig;
			import org.osmf.logging.Log;
			import org.osmf.logging.Logger;
			
			import robotlegs.bender.bundles.mvcs.MVCSBundle;
			import robotlegs.bender.extensions.contextView.ContextView;
			import robotlegs.bender.extensions.signalCommandMap.SignalCommandMapExtension;
			import robotlegs.bender.framework.api.IContext;
			import robotlegs.bender.framework.api.LogLevel;
			import robotlegs.bender.framework.impl.Context;
			
			protected var context: IContext;
			
			protected function preinitializeHandler(event:FlexEvent):void
			{
				setupContext();
				setupLogger();
			}
			
			/**
			 * Sets up the Robotlegs context.
			 */
			private function setupContext(): void
			{
				context = new Context()
					.install(MVCSBundle, SignalCommandMapExtension)
									.configure(AppConfig)
									.configure(PagesNavigatorConfig)
										.configure(AppPageConfig)
											.configure(TopConfig)
											.configure(MainNavigatorConfig)
												.configure(PresentationConfig)
											.configure(MenuConfig)	
										.configure(LoginPageConfig)
												
									.configure(VideoChatConfig)						
									.configure(MicButtonConfig)
									.configure(NavigationButtonConfig)
					
					.configure(new ContextView(this));
				
				// If you wish to change the log level then uncomment the line below and set 
				// the logLevel to the value you desire. The default logLevel is DEBUG, which 
				// is set in the MVCSBundle. The default log level traces out the framework 
				// actions, which can assist in learning Robotlegs.
				setLogLevel();
			}
			
			/**
			 * Sets the logLevel for the robotegs context.
			 */
			private function setLogLevel(): void
			{
				// setting the logLevel to WARN means that robotlegs
				// will also notify us about ERROR & FATAL.
				context.logLevel = LogLevel.WARN;
			}
			
			private function setupLogger():void
			{
				Log.loggerFactory = new MconfLoggerFactory(); 
				var logger:Logger = Log.getLogger("org.mconf.mobile");
				logger.info("Logger on");
			}
		]]>
	</fx:Script>
	<navigation:PagesNavigatorView width="100%" height="100%"/>
	
</s:Application>
