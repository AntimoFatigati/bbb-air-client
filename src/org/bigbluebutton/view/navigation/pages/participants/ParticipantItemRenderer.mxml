<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				styleName="participantItemStyle"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.bigbluebutton.model.User;
			
			override public function set data(obj:Object):void {
				super.data = obj;				
				if (obj) 
				{
					presentationIcon.visible = presentationIcon.includeInLayout = obj.presenter;
					profileIcon.visible = profileIcon.includeInLayout = ((obj.role == User.MODERATOR) && (!obj.presenter));
					
					if(obj.presenter || obj.role == User.MODERATOR)
					{
						handIcon.visible = handIcon.includeInLayout = false;
					}
					else if(obj.role == User.VIEWER)
					{
						handIcon.includeInLayout = true;
						handIcon.visible = obj.raiseHand;
						presentationIcon.visible = presentationIcon.includeInLayout = profileIcon.includeInLayout = profileIcon.visible = false;
					}
					
					cameraIcon.visible = obj.hasStream;
				
					micIcon.visible = (obj.voiceJoined && !obj.muted);
					micOffIcon.visible = (obj.voiceJoined && obj.muted);
					
					soundIcon.visible = obj.talking;
					
					if(obj.me)
					{
						labelDisplay.text = obj.name + " " + resourceManager.getString('resources', 'userDetail.you');
					}
					else
					{
						labelDisplay.text = obj.name;
					}
					
					if(obj.presenter)
					{
						subLabelDisplay.visible = subLabelDisplay.includeInLayout = true;
						subLabelDisplay.text = resourceManager.getString('resources', 'participants.status.presenter');
					}
					else if(obj.role == "MODERATOR")
					{
						subLabelDisplay.visible = subLabelDisplay.includeInLayout = true;
						subLabelDisplay.text = resourceManager.getString('resources', 'participants.status.moderator');
					}
					else
					{
						subLabelDisplay.visible = subLabelDisplay.includeInLayout = false;
					}
					
				}
			}
			
		]]>
	</fx:Script>
	<s:Group width="100%" height="{getStyle('itemHeight')}">
			<s:layout>
				<s:HorizontalLayout  verticalAlign="middle" paddingLeft="{getStyle('itemPaddingLeft')}" paddingRight="{getStyle('itemPaddingRight')}"/>
			</s:layout>
			<s:Image id="profileIcon" styleName="iconStyle moderatorIconStyle" height="100%"/>
			<s:Image id="presentationIcon" styleName="iconStyle presentationIconStyle" height="100%"/>
			<s:Image id="handIcon" styleName="iconStyle handIconStyle" height="100%"/>
			<s:Group width="70%">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<s:Label id="labelDisplay" width="100%"  height="100%" styleName="contentFontSize"/>
				<s:Label id="subLabelDisplay" width="100%"  height="100%" styleName="subContentFontSize"/>
			</s:Group>

			<s:Image id="cameraIcon" styleName="iconStyle cameraIconStyle" height="100%"/>
			<s:Group height="100%">
				<s:Image id="micIcon" styleName="iconStyle micIconStyle" height="100%"/>
				<s:Image id="micOffIcon" styleName="iconStyle micOffIconStyle" visible="false" height="100%"/>
			</s:Group>
			<s:Image id="soundIcon" styleName="iconStyle soundIconStyle" height="100%" />
	</s:Group>
	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="{getStyle('lineColor')}" weight="{getStyle('lineWeight')}" />
		</s:stroke>
	</s:Line>

</s:ItemRenderer>